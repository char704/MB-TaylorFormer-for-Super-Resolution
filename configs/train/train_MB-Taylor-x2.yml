name: MB-TaylorV2_x2
model_type: SRModel
scale: 2
num_gpu: 1
manual_seed: 123

datasets:
  train:
    name: DIV2K
    type: PairedImageDataset
    dataroot_gt: path_to/DIV2K_train_HR
    dataroot_lq: path_to/DIV2K_train_LR_bicubic/X2
    filename_tmpl: '{}'
    io_backend:
      type: disk
    gt_size: 128          # HR patch size (so LR patch is 64 for x2)
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 1
    prefetch_mode: ~
    use_flip: true
    use_rot: true

  val:
    name: Set5
    type: PairedImageDataset
    dataroot_gt: path_to/Set5/HR
    dataroot_lq: path_to/Set5/LR_bicubic/X2
    io_backend:
      type: disk

network_g:
  type: MBTaylorFormerV2
  in_chans: 3
  embed_dim: 96
  depths: [4, 4, 4]
  num_heads: [3, 3, 3]
  mlp_ratio: 2.0
  taylor_order: 3          # Taylor expansion order
  window_size: 8
  conv_fusion: true        # local conv + global Taylor attention
  upscale: 2

path:
  # experiments_root is where BasicSR writes models/, training_states/, visualization/, logs/
  experiments_root: experiments/MB-TaylorV2_x2/last
  pretrain_network_g: ~
  # auto_resume will pick up the latest state in experiments_root if present
  strict_load_g: true
  resume_state: ~

train:
  optim_g:
    type: AdamW
    lr: 2e-4
    betas: [0.9, 0.99]
    weight_decay: 0.0

  scheduler:
    type: CosineAnnealingLR
    T_max: 600000         # total iters
    eta_min: 1e-6

  total_iter: 600000
  warmup_iter: -1

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  perceptual_opt: ~        # you can enable later (VGG)

val:
  val_freq: 5000
  save_img: false
  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 2
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 2
      test_y_channel: false

logger:
  print_freq: 100
  save_checkpoint_freq: 5000
  use_tb_logger: true
  max_keep_ckpts: 1        # keep only the last checkpoint if supported

dist_params:
  backend: nccl
  port: 29500
